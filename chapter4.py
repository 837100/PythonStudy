# 파이썬 시작하기
rad = 20
hei = 30

print(1 / 3 * 3.14 * rad * hei)
print(3.14 * rad * rad + 3.14 * rad * hei)

# 문자열 출력 문자열은 '과 "둘다 사용 가능
print('test' + ' "\'" ' + 'text')
print('Hello World')
print('Python is Fun')

# 학점 계산
""" 성적 계산 
    계산 방식 sum(성적 * 학점) / 총학점 """
print((4.5 * 2 + 4.0 * 3) / (130 - 66))

# 반지름 20, 높이 30
# 부피 출력
print(1 / 3 * 3.14 * 20 ** 2 * 30)
# 겉넓이 출력
print(3.14 * 20 ** 2 + 3.14 * 20 * 30)

'''
위의 코드에서 값을 변경하기 좋게 하려면 어떻게 해야할까? -> 변수를 사용. rad = 30 : lvalue(지속되는 대상) = rvalue (임시적인 대상)
변수를 만들면 메모리의 몇개의 칸을 저장해서 값을 저장하고 접근할 수 있도록 저장 공간 지정
식별자, 저장공간, 값으로 구성

식별자: 어떤 저장공간을 어떤 명칭으로 부르기 위한 목적
프로그램 내부에 정의된 객체(변수, 함수 등)의 이름
문자, 숫자 , 밑줄로 구성 / 문자 또는 밑줄로만 시작 가능 / 예약어와 동일할 수 없음 / 길이 제한이 없음
'''
rad = 40
hei = 10

# 부피 출력
print(1 / 3 * 3.14 * rad ** 2 * hei)

# 겉 넓이 출력
print(3.14 * rad ** 2 + 3.14 * rad * hei)

'''
산술연산자의 정의
피연산자(operand)에 대해 지정된 산술 연산을 지시하는 기호
단항 연산자(unary operator)
이항 연산자(binary operator)

특수 산술연산자
프로그래밍 언어에서만 사용되는 연산 또는 부호
-> 정수 나눗셈 연산자(//)
-> 모듈로 연산자(%)
파이썬에서는 5/2가 2.5가 나오기 때문에 5//2를 해야 2가 나옴.

- 연산자 우선순위
표현식에 사용된 여러 연산자의 연산 순서를 결정
1. 괄호 내부의 수식
2. 지수(**)연산자
3. 곱셈, 실수 나눗셈, 정수 나눗셈, 나머지 연산자
4. 덧셈, 뺄셈 연산자
 - 왼쪽에서 오른쪽 순서로 적용
5. 할당 연산자

- 파이썬 내장함수 : 파이썬 인터프리터에서 기본적으로 지원하는 함수 -> 별도의 모듈이나 패키지 없이 사용 가능
'''

# 연산자
print(1.5 / 2)
print(5 // 2)
print(25 % 7)
print(8.4 % 0.9)

# 짝수 홀수 구분
number = 10
print(number % 2)

# 내장 함수
print('max:', max(2, 3, 4))
print(f'max: {max(2, 3, 4)}')
print('max: ' + str(max(2, 3, 4)))
print('max : {}'.format(max(2, 3, 4)))
print(min(2, 3, 4))

# 반올림 round(number[, ndigits])
# 1. number: 반올림할 숫자 (필수).
# 2. ndigits: 반올림할 소수점 자리 (선택, 기본값: `None`).
print(round(3.14))
# 절댓값
print(abs(-3))
# 2의 3제곱
print(pow(2, 3))

apple = 2
banana = 3
cranberry = 1
detox = (banana ** 2 - 4 * apple * cranberry)
print('답이 1인데 오답으로 나와서 검증용 코드')
print(detox)
